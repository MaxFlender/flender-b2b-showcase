'use client';

/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 */

/* eslint-disable */

import type { EventName, StencilReactComponent } from '@stencil/react-output-target/runtime';
import { createComponent } from '@stencil/react-output-target/runtime';
import { FleButton as FleButtonElement, defineCustomElement as defineFleButton } from "../components/fle-button.js";
import { FleCategory as FleCategoryElement, defineCustomElement as defineFleCategory } from "../components/fle-category.js";
import { FleGridView as FleGridViewElement, defineCustomElement as defineFleGridView } from "../components/fle-grid-view.js";
import { FleHeroBanner as FleHeroBannerElement, defineCustomElement as defineFleHeroBanner } from "../components/fle-hero-banner.js";
import { FleImageInfoTile as FleImageInfoTileElement, defineCustomElement as defineFleImageInfoTile } from "../components/fle-image-info-tile.js";
import { FleInfo as FleInfoElement, defineCustomElement as defineFleInfo } from "../components/fle-info.js";
import { FleMedia as FleMediaElement, defineCustomElement as defineFleMedia } from "../components/fle-media.js";
import { FleProductListItem as FleProductListItemElement, defineCustomElement as defineFleProductListItem } from "../components/fle-product-list-item.js";
import { MyComponent as MyComponentElement, defineCustomElement as defineMyComponent } from "../components/my-component.js";
import React from 'react';

type FleButtonEvents = { onButtonClicked: EventName<CustomEvent<void>> };

export const FleButton: StencilReactComponent<FleButtonElement, FleButtonEvents> = /*@__PURE__*/ createComponent<FleButtonElement, FleButtonEvents>({
    tagName: 'fle-button',
    elementClass: FleButtonElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: { onButtonClicked: 'buttonClicked' } as FleButtonEvents,
    defineCustomElement: defineFleButton
});

type FleCategoryEvents = NonNullable<unknown>;

export const FleCategory: StencilReactComponent<FleCategoryElement, FleCategoryEvents> = /*@__PURE__*/ createComponent<FleCategoryElement, FleCategoryEvents>({
    tagName: 'fle-category',
    elementClass: FleCategoryElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as FleCategoryEvents,
    defineCustomElement: defineFleCategory
});

type FleGridViewEvents = NonNullable<unknown>;

export const FleGridView: StencilReactComponent<FleGridViewElement, FleGridViewEvents> = /*@__PURE__*/ createComponent<FleGridViewElement, FleGridViewEvents>({
    tagName: 'fle-grid-view',
    elementClass: FleGridViewElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as FleGridViewEvents,
    defineCustomElement: defineFleGridView
});

type FleHeroBannerEvents = NonNullable<unknown>;

export const FleHeroBanner: StencilReactComponent<FleHeroBannerElement, FleHeroBannerEvents> = /*@__PURE__*/ createComponent<FleHeroBannerElement, FleHeroBannerEvents>({
    tagName: 'fle-hero-banner',
    elementClass: FleHeroBannerElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as FleHeroBannerEvents,
    defineCustomElement: defineFleHeroBanner
});

type FleImageInfoTileEvents = NonNullable<unknown>;

export const FleImageInfoTile: StencilReactComponent<FleImageInfoTileElement, FleImageInfoTileEvents> = /*@__PURE__*/ createComponent<FleImageInfoTileElement, FleImageInfoTileEvents>({
    tagName: 'fle-image-info-tile',
    elementClass: FleImageInfoTileElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as FleImageInfoTileEvents,
    defineCustomElement: defineFleImageInfoTile
});

type FleInfoEvents = NonNullable<unknown>;

export const FleInfo: StencilReactComponent<FleInfoElement, FleInfoEvents> = /*@__PURE__*/ createComponent<FleInfoElement, FleInfoEvents>({
    tagName: 'fle-info',
    elementClass: FleInfoElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as FleInfoEvents,
    defineCustomElement: defineFleInfo
});

type FleMediaEvents = NonNullable<unknown>;

export const FleMedia: StencilReactComponent<FleMediaElement, FleMediaEvents> = /*@__PURE__*/ createComponent<FleMediaElement, FleMediaEvents>({
    tagName: 'fle-media',
    elementClass: FleMediaElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as FleMediaEvents,
    defineCustomElement: defineFleMedia
});

type FleProductListItemEvents = { onProductClicked: EventName<CustomEvent<void>> };

export const FleProductListItem: StencilReactComponent<FleProductListItemElement, FleProductListItemEvents> = /*@__PURE__*/ createComponent<FleProductListItemElement, FleProductListItemEvents>({
    tagName: 'fle-product-list-item',
    elementClass: FleProductListItemElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: { onProductClicked: 'productClicked' } as FleProductListItemEvents,
    defineCustomElement: defineFleProductListItem
});

type MyComponentEvents = NonNullable<unknown>;

export const MyComponent: StencilReactComponent<MyComponentElement, MyComponentEvents> = /*@__PURE__*/ createComponent<MyComponentElement, MyComponentEvents>({
    tagName: 'my-component',
    elementClass: MyComponentElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as MyComponentEvents,
    defineCustomElement: defineMyComponent
});
