{"file":"fle-product-list-item.js","mappings":";;;;;;AAAA,MAAM,qBAAqB,GAAG,ipBAAipB,CAAC;AAChrB,iCAAe,qBAAqB;;MCOvBA,oBAAkB;;;;;;;;;sBAKJ,OAAO;;;;IAMhC,MAAM;QACJ,QACE,EAAC,IAAI,qDAAC,KAAK,EAAC,uBAAuB,IAChC,IAAI,CAAC,QAAQ,IAAI,uEAAe,IAAI,CAAC,QAAQ,CAAgB,EAC7D,IAAI,CAAC,QAAQ,IAAI,6DAAK,IAAI,CAAC,QAAQ,CAAM,EACzC,IAAI,CAAC,QAAQ,IAAI,+EAAsB,IAAI,CAAC,QAAQ,oBAAkB,IAAI,CAAC,YAAY,GAAc,EACrG,IAAI,CAAC,WAAW,IAAI,4DAAI,IAAI,CAAC,WAAW,CAAK,EAG5C,mEAAY,eAAe,EAAE,MAAM,IAAI,CAAC,SAAS,EAAE,IAChD,IAAI,CAAC,OAAO,CACF,CAEV,EACP;KACH;IAEO,SAAS;QACf,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;KAC5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["FleProductListItem"],"sources":["src/components/fle-product-list-item/fle-product-list-item.scss?tag=fle-product-list-item","src/components/fle-product-list-item/fle-product-list-item.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\n.fle-product-list-item {\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: center;\n  align-items: flex-start;\n  overflow: hidden;\n  padding: 3rem;\n  font-weight: 100;\n  gap: 16px;\n\n  h3 {\n    color: $primary-color;\n    font-size: $title-text-size;\n    font-weight: 100;\n  }\n\n  p {\n    font-size: $normal-text-size;\n    font-weight: 100;\n  }\n\n  // unstile a tag cause we use button for the link\n  a,\n  a:link,\n  a:visited,\n  a:hover,\n  a:active {\n    color: inherit;\n    text-decoration: inherit;\n    font-weight: inherit;\n  }\n}\n","import { Component, Host, h, Prop, Event, EventEmitter } from '@stencil/core';\nimport { HASHTAG } from '../../utils/utils';\n\n@Component({\n  tag: 'fle-product-list-item',\n  styleUrl: 'fle-product-list-item.scss',\n  shadow: false, // no shadow dom cause CMSs system need access for live preview\n})\nexport class FleProductListItem {\n  @Prop() headline: string;\n  @Prop() category: string;\n  @Prop() description: string;\n  @Prop() ctaText: string;\n  @Prop() ctaUrl: string = HASHTAG;\n  @Prop() mediaUrl: string;\n  @Prop() mediaAltText: string;\n\n  @Event() productClicked: EventEmitter<void>;\n\n  render() {\n    return (\n      <Host class=\"fle-product-list-item\">\n        {this.category && <fle-category>{this.category}</fle-category>}\n        {this.headline && <h3>{this.headline}</h3>}\n        {this.mediaUrl && <fle-media media-url={this.mediaUrl} media-alt-text={this.mediaAltText}></fle-media>}\n        {this.description && <p>{this.description}</p>}\n        {/* TODO Maybe it's better to use click event instead a tag */}\n        {/*<a href={this.ctaUrl} target=\"_blank\">*/}\n          <fle-button onButtonClicked={() => this.onClicked()}>\n            {this.ctaText}\n          </fle-button>\n        {/*</a>*/}\n      </Host>\n    );\n  }\n\n  private onClicked() {\n    this.productClicked.emit();\n  }\n}\n"],"version":3}